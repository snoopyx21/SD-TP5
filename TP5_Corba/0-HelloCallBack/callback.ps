%!PS-Adobe-3.0
%%Title: pok.java
%%For: Guillaume Latu
%%Creator: a2ps version 4.13
%%CreationDate: Tue Nov 29 09:49:35 2005
%%BoundingBox: 24 40 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letterdj 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 40 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.221458 def
/cw 4.332875 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 82.400000 mul
def
/ph
   524.999994 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 5 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.033012 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (======) p n
0 T (Hello.idl) N
0 T (=====) N
(4) # (module HelloApp {) N
0 T (   ) S
(interface) K
( ) p
(HelloCallback) L
( {) p n
0 T (        ) S
(void) k
( callback\(in string message\);) p n
0 T (   };) N
(8) # (   ) S
(interface) K
( ) p
(Hello) L
( {) p n
0 T (        string sayHello\(in HelloCallback objRef, in string message\);) N
0 T (        oneway ) S
(void) k
( shutdown\(\);) p n
0 T (    };) N
(12) # (};) N
0 T (======) N
0 T (HelloServeur.java) N
0 T (=====) N
(16) # () S
(import) K
( org.omg.CORBA.*;) p n
0 T () S
(import) K
( org.omg.PortableServer.*;) p n
0 T () S
(import) K
( java.util.*;) p n
0 T () S
(import) K
( java.io.*;) p n
(20) # () S
(import) K
( org.omg.CosNaming.*;) p n
0 T () S
(import) K
( HelloApp.HelloPOA;) p n
0 T () S
(import) K
( HelloApp.Hello;) p n
0 T () S
(import) K
( HelloApp.HelloCallback;) p n
(24) # () S
(import) K
( HelloApp.HelloHelper;) p n
0 T () N
0 T () S
(class) K
( ) p
(HelloImpl) L
( ) p
(extends) K
( HelloPOA {) p n
0 T (  ) S
(private) K
( ORB orb;) p n
(28) # (  ) S
(public) K
( ) p
(void) k
( setORB\(ORB orb_val\) {) p n
0 T (    orb = orb_val; ) N
0 T (  }) N
0 T (  ) S
(public) K
( String sayHello \(HelloCallback objRef, String message\) {) p n
(32) # (    objRef.callback\(message\);) N
0 T (    ) S
(return) K
( ") p
(second affichage) str
(";) p n
0 T (  }) N
0 T (  ) S
(public) K
( ) p
(void) k
( shutdown\(\) {) p n
(36) # (    orb.shutdown\() S
(false) k
(\); }) p n
0 T (}) N
0 T () N
0 T () S
(public) K
( ) p
(class) K
( ) p
(HelloServeur) L
( {) p n
(40) # (  ) S
(public) K
( ) p
(static) K
( ) p
(void) k
( main\(String args[]\) {) p n
0 T (    ) S
(try) K
({) p n
0 T (      ORB orb = ORB.init\(args, ) S
(null) k
(\);) p n
0 T () N
(44) # (      HelloImpl helloImpl = ) S
(new) K
( HelloImpl\(\);) p n
0 T (      helloImpl.setORB\(orb\); ) N
0 T () N
0 T (      ) S
(// init POA) c n
(48) # () S
(      POA rootpoa =) p 24 T (       ) N
0 T (      POAHelper.narrow\(orb.resolve_initial_references\(") S
(RootPOA) str
("\)\);) p n
0 T (      rootpoa.the_POAManager\(\).activate\(\);) N
0 T () N
(52) # (      org.omg.CORBA.Object ref = rootpoa.servant_to_reference\(helloImpl\);) N
0 T (      Hello href = HelloHelper.narrow\(ref\);) N
0 T () S 8 T (  ) N
0 T (      ) S
(// inscription de l'objet au service de noms) c n
(56) # () S
(      org.omg.CORBA.Object objRef =) p n
0 T (          orb.resolve_initial_references\(") S
(NameService) str
("\);) p n
0 T (      NamingContextExt ncRef = NamingContextExtHelper.narrow\(objRef\);) N
0 T (      NameComponent path[] = ncRef.to_name\( ") S
(Hello) str
(" \);) p n
(60) # (      ncRef.rebind\(path, href\);) N
0 T () N
0 T (      System.out.println\(") S
(HelloServeur ready and waiting ...) str
("\);) p n
0 T (      orb.run\(\);) N
(64) # (    } ) N
0 T () S 8 T () N
0 T (    ) S
(catch) K
( \(Exception e\) {) p n
0 T (        System.err.println\(") S
(ERROR: ) str
(" + e\);) p n
(68) # (        e.printStackTrace\(System.out\);) N
0 T (      }) N
0 T () S 8 T (  ) N
0 T (      System.out.println\(") S
(HelloServeur Exiting ...) str
("\); }) p n
(72) # (}) N
(Corba - CallBack) ( ) ( ) title
border
/v 1 store
/x0 x v get 3.033012 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (======) p n
0 T (HelloClient.java) N
0 T (=====) N
(76) # () S
(import) K
( org.omg.CORBA.*;) p n
0 T () S
(import) K
( org.omg.PortableServer.*;) p n
0 T () S
(import) K
( java.util.*;) p n
0 T () S
(import) K
( java.io.*;) p n
(80) # () S
(import) K
( org.omg.CosNaming.*;) p n
0 T () S
(import) K
( HelloApp.HelloCallbackPOA;) p n
0 T () S
(import) K
( HelloApp.Hello;) p n
0 T () S
(import) K
( HelloApp.HelloHelper;) p n
(84) # () S
(import) K
( HelloApp.HelloCallback;) p n
0 T () S
(import) K
( HelloApp.HelloCallbackHelper;) p n
0 T () N
0 T () S
(class) K
( ) p
(HelloCallbackImpl) L
( ) p
(extends) K
( HelloCallbackPOA {) p n
(88) # (    ) S
(public) K
( ) p
(void) k
( callback\(String message\) {) p n
0 T () S 8 T (System.out.println\(message\);   }}) N
0 T () N
0 T () S
(class) K
( ) p
(ThreadRun) L
( ) p
(extends) K
( Thread {) p n
(92) # (    ) S
(private) K
( ORB orb;) p n
0 T (    ) S
(public) K
( ThreadRun\(ORB orb\) {) p n
0 T () S 8 T (this.orb = orb;) N
0 T (    }) N
(96) # (    ) S
(public) K
( ) p
(void) k
( run\(\) {) p n
0 T () S 8 T () S
(try) K
({) p n
0 T () S 8 T (    orb.run\(\);) N
0 T () S 8 T (} ) S
(catch) K
( \(Exception e\) {) p n
(100) # () S 8 T (    System.out.println\(") S
(ERROR : ) str
(" + e\) ;) p n
0 T () S 8 T (    e.printStackTrace\(System.out\);) N
0 T () S 8 T (    System.exit\(1\);) N
0 T () S 8 T (}) S 16 T () N
(104) # (    }) N
0 T (    ) S
(public) K
( ) p
(void) k
( shutdown\(\) {) p n
0 T () S 8 T (orb.shutdown\() S
(false) k
(\);   }}) p n
0 T () N
(108) # () S
(public) K
( ) p
(class) K
( ) p
(HelloClient) L
( {) p n
0 T (    ) S
(public) K
( ) p
(static) K
( ) p
(void) k
( main\(String args[]\) {) p n
0 T () S 8 T () S
(try) K
({) p n
0 T () S 8 T (    ORB orb = ORB.init\(args, ) S
(null) k
(\);) p n
(112) # () S 8 T (    org.omg.CORBA.Object objRef = ) N
0 T () S 8 T () S 16 T (orb.resolve_initial_references\(") S
(NameService) str
("\);) p n
0 T () S 8 T (    NamingContextExt ncRef = NamingContextExtHelper.narrow\(objRef\);) N
0 T () S 8 T (    String name = ") S
(Hello) str
(";) p n
(116) # () N
0 T () S 8 T (    ) S
(// obtenir reference sur l'objet distant) c n
0 T () S
() p 8 T (    Hello helloImpl = HelloHelper.narrow\(ncRef.resolve_str\(name\)\);) N
0 T () S 8 T (    ) S
(// Init POA) c n
(120) # () S
() p 8 T (    POA rootpoa = ) N
0 T () S 8 T () S 16 T (POAHelper.narrow\(orb.resolve_initial_references\(") S
(RootPOA) str
("\)\);) p n
0 T () S 8 T (    rootpoa.the_POAManager\(\).activate\(\);) N
0 T () N
(124) # () S 8 T (    ) S
(// creer l'objet qui sera appele' depuis le serveur) c n
0 T () S
() p 8 T (    HelloCallbackImpl helloCallbackImpl = ) S
(new) K
( HelloCallbackImpl\(\);) p n
0 T () S 8 T (    org.omg.CORBA.Object ref = ) N
0 T () S 8 T (        rootpoa.servant_to_reference\(helloCallbackImpl\);) N
(128) # () S 8 T (    HelloCallback hcbref = HelloCallbackHelper.narrow\(ref\); ) N
0 T () S 8 T () N
0 T () S 8 T (    ) S
(// lancer l'ORB dans un thread) c n
0 T () S
() p 8 T (    ThreadRun thread = ) S
(new) K
( ThreadRun\(orb\);) p n
(132) # () S 8 T (    thread.start\(\);) N
0 T () N
0 T () S 8 T (    ) S
(// declenche la methode sur l'objet distant) c n
0 T () S
() p 8 T (    System.out.println\(helloImpl.sayHello\(hcbref,") S
(premier affichage) str
("\)\);) p n
(136) # () N
0 T () S 8 T (    ) S
(// shutdown) c n
0 T () S
() p 8 T (    helloImpl.shutdown\(\);) N
0 T () S 8 T (    thread.shutdown\(\);) N
(140) # () S 8 T (    ) N
0 T () S 8 T (} ) S
(catch) K
( \(Exception e\) {) p n
0 T () S 8 T (    System.out.println\(") S
(ERROR : ) str
(" + e\) ;) p n
0 T () S 8 T (    e.printStackTrace\(System.out\);) S 48 T (}}}) N
(Corba - CallBack) ( ) ( ) title
border
grestore
(= ) rhead
( ) ( ) ( ) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
